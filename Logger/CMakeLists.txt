cmake_minimum_required(VERSION 3.20.0)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
project(Logger)

find_package(spdlog CONFIG REQUIRED)

file(GLOB SOURCES "src/*.cpp")

add_library(${PROJECT_NAME} SHARED
    ${SOURCES}
)

target_include_directories(${PROJECT_NAME} PRIVATE
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)


target_link_libraries(${PROJECT_NAME} PRIVATE spdlog::spdlog)
target_compile_definitions(${PROJECT_NAME} PRIVATE MYLOGGER_EXPORTS)

set(OUTPUT_DIR ${CMAKE_ROOT_DIR})

set_target_properties(${PROJECT_NAME} PROPERTIES 
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/bin
    LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/${PROJECT_NAME}/lib
    ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/${PROJECT_NAME}/lib
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/bin
    LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/${PROJECT_NAME}/lib
    ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/${PROJECT_NAME}/lib
    OUTPUT_NAME "$<IF:$<CONFIG:Debug>,${PROJECT_NAME}d,${PROJECT_NAME}>")

set(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_SOURCE_DIR}/installed/)

install(TARGETS ${PROJECT_NAME}
    EXPORT ${PROJECT_NAME}Targets
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
    INCLUDES DESTINATION include
)

install(FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/include/ILogger.hpp
    DESTINATION include/${PROJECT_NAME}
)

install(EXPORT ${PROJECT_NAME}Targets
    FILE ${PROJECT_NAME}Config.cmake
    NAMESPACE ${PROJECT_NAME}::
    DESTINATION lib/cmake/${PROJECT_NAME}
)
